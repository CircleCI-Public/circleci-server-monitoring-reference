{{- $name := include "server-monitoring.fullname" . -}}
{{- $repository := .Values.prometheusOperator.image.repository -}}
{{- $tag := .Values.prometheusOperator.image.tag -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/version: {{ $tag }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
  name: {{ $name}}-prometheus-operator
spec:
  replicas: {{ .Values.prometheusOperator.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus-operator
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: {{ $tag }}
    spec:
      automountServiceAccountToken: true
      imagePullSecrets:
        {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      containers:
        - args:
            - --kubelet-service=kube-system/kubelet
            {{- with .Values.prometheusOperator.prometheusConfigReloader.image }}
            - --prometheus-config-reloader={{ .repository }}:{{ .tag }}
            {{- end }}
            - --kubelet-endpoints=true
            - --kubelet-endpointslice=false
          env:
            - name: GOGC
              value: "30"
          image: {{ printf "%s:%s" $repository $tag }}
          name: prometheus-operator
          ports:
            - containerPort: 8080
              name: http
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ $name}}-prometheus-operator
